# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Affiliation {
  id: Float!
  name: String!
}

type Clan {
  id: Float!
  name: String!
}

type Class {
  id: Float!
  name: String!
}

type Classification {
  id: Float!
  name: String!
}

type ClassificationJutsu {
  id: Float!
  name: String!
}

type Family {
  details: Ninja
  relationship: String
}

type Jutsu {
  class: [Class!]
  classification: [ClassificationJutsu!]
  derived_jutsu: [Jutsu!]
  description: String
  english_anime_name: String
  hand_seals: String
  literal_english_name: String
  name: String
  nature: NatureType
  parent_jutsu: [Jutsu!]
  range: String
  rank: String
  related_jutsu: Jutsu
}

type NatureType {
  affinity: Boolean!
  id: Float!
  name: String!
}

type Ninja {
  academy_grad_age: String
  affiliation: [Affiliation!]
  birthdate: String
  blood_type: String
  chunin_prom_age: String
  clan: [Clan!]
  classification: [Classification!]
  family: [Family!]
  id: Float!
  jutsus: [Jutsu!]
  name: String
  nature_type: [NatureType!]
  ninja_attributes: [NinjaAttr!]
  ninja_registration: String
  occupation: [Occupation!]
  sex: String
  status: String
  team: [Team!]
  tools: [Tools!]
  unique_traits: String
}

type NinjaAttr {
  age: String
  height: String
  ninja_rank: String
  season: String!
  weight: String
}

type Occupation {
  id: Float!
  name: String!
}

type Query {
  jutsus(skip: Int = 0, take: Int = 15): [Jutsu!]!
  ninjas(skip: Int = 0, take: Int = 15): [Ninja!]!
  teams(skip: Int = 0, take: Int = 15): [Team!]!
}

type Team {
  affiliation: [Affiliation!]
  description: String
  id: Float!
  leader: Boolean!
  name: String!
}

type Tools {
  description: String
  english_anime_name: String
  literal_english_name: String
  name: String
}
